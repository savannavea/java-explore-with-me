{
  "info": {
    "_postman_id": "17122fec-664e-4b03-acde-1de2bc9e79ca",
    "name": "Test Explore With Me - Feature_location_processing",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "27905297"
  },
  "item": [
    {
      "name": "Post",
      "item": [
        {
          "name": "Добавление локации 109",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
                  "    pm.response.to.have.status(201);   \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const target = pm.response.json();\r",
                  "var query = {};\r",
                  "pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});\r",
                  "\r",
                  "pm.test(\"При создании у локации должен быть статус APPROVED\", function () {\r",
                  "    pm.expect(target.locationState).equal(\"APPROVED\");\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Локация должна содержать поля: id, lat, lon, name, radius, locationState\", function () {\r",
                  "pm.expect(target).to.have.property('id');\r",
                  "pm.expect(target).to.have.property('lat');\r",
                  "pm.expect(target).to.have.property('lon');\r",
                  "pm.expect(target).to.have.property('name');\r",
                  "pm.expect(target).to.have.property('radius');\r",
                  "pm.expect(target).to.have.property('locationState');\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"Saint-Petersburg\",\r\n    \"lat\": 55.88,\r\n    \"lon\": 123.34,\r\n    \"radius\": 2.0\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/locations",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Добавление локации 110",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
                  "    pm.response.to.have.status(201);   \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const target = pm.response.json();\r",
                  "var query = {};\r",
                  "pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});\r",
                  "\r",
                  "pm.test(\"При создании у локации должен быть статус APPROVED\", function () {\r",
                  "    pm.expect(target.locationState).equal(\"APPROVED\");\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Локация должна содержать поля: id, lat, lon, name, radius, locationState\", function () {\r",
                  "pm.expect(target).to.have.property('id');\r",
                  "pm.expect(target).to.have.property('lat');\r",
                  "pm.expect(target).to.have.property('lon');\r",
                  "pm.expect(target).to.have.property('name');\r",
                  "pm.expect(target).to.have.property('radius');\r",
                  "pm.expect(target).to.have.property('locationState');\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"Gorokhovaya Street\",\r\n    \"lat\": 55.36,\r\n    \"lon\": 124.23,\r\n    \"radius\": 3.0\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/locations",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Проверка некорректного добавления",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 409\", function () {\r",
                  "    pm.expect(pm.response.code).to.equal(409);\r",
                  "});\r",
                  "pm.test(\"Has error response\", function () {\r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"Gorokhovaya Street\",\r\n    \"lat\": 55.36,\r\n    \"lon\": 124.23,\r\n    \"radius\": 3.0\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/locations",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Path",
      "item": [
        {
          "name": "Изменение координат локации 109",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
                  "    pm.response.to.have.status(200);   \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const target = pm.response.json();\r",
                  "var query = {};\r",
                  "pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});\r",
                  "\r",
                  "pm.test(\"При создании у локации должен быть статус APPROVED\", function () {\r",
                  "    pm.expect(target.locationState).equal(\"APPROVED\");\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Локация должна содержать поля: id, lat, lon, name, radius, locationState\", function () {\r",
                  "pm.expect(target).to.have.property('id');\r",
                  "pm.expect(target).to.have.property('lat');\r",
                  "pm.expect(target).to.have.property('lon');\r",
                  "pm.expect(target).to.have.property('name');\r",
                  "pm.expect(target).to.have.property('radius');\r",
                  "pm.expect(target).to.have.property('locationState');\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"lat\": 55.81,\r\n    \"lon\": 123.34,\r\n    \"radius\": 2.0\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/locations/109",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations",
                "109"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Изменение статуса локации 110",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
                  "    pm.response.to.be.ok;    \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = pm.collectionVariables.get('response');\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "\r",
                  "pm.test(\"Локация должна содержать поля: id, lat, lon, name, radius, locationState\", function () {\r",
                  "pm.expect(target).to.have.property('id');\r",
                  "pm.expect(target).to.have.property('lat');\r",
                  "pm.expect(target).to.have.property('lon');\r",
                  "pm.expect(target).to.have.property('name');\r",
                  "pm.expect(target).to.have.property('radius');\r",
                  "pm.expect(target).to.have.property('locationState');\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"status\": \"CANCELED\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/admin/locations/110",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations",
                "110"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Get",
      "item": [
        {
          "name": "Получение локации по id 109",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
                  "    pm.response.to.have.status(200);   \r",
                  "    pm.response.to.be.withBody;\r",
                  "    pm.response.to.be.json;\r",
                  "});\r",
                  "\r",
                  "const source = pm.collectionVariables.get('response');\r",
                  "const target = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Локация должна содержать поля: id, lat, lon, name, radius\", function () {\r",
                  "pm.expect(target).to.have.property('id');\r",
                  "pm.expect(target).to.have.property('lat');\r",
                  "pm.expect(target).to.have.property('lon');\r",
                  "pm.expect(target).to.have.property('name');\r",
                  "pm.expect(target).to.have.property('radius');\r",
                  "});\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/locations/:Id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations",
                ":Id"
              ],
              "variable": [
                {
                  "key": "Id",
                  "value": "109"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Delete",
      "item": [
        {
          "name": "Удаление локации 109",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.expect(pm.response.code).to.equal(200);\r",
                  "});\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/locations/109",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "locations",
                "109"
              ]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080"
    },
    {
      "key": "uid",
      "value": "1"
    }
  ]
}